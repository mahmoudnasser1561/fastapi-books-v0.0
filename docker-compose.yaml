services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: books
    ports:
      - "5433:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s  

  api:
    build: .
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db  
      POSTGRES_PORT: 5432
      POSTGRES_DB: books

  lb:
    image: nginx:latest
    ports:
      - "8080:80"  
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api

  backup:
    image: postgres:16  
    volumes:
      - ./backups:/backups 
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db  
      POSTGRES_PORT: 5432
      POSTGRES_DB: books
    entrypoint: ["/bin/sh", "-c"]
    command: |
      - "while true; do pg_dump -U $$  POSTGRES_USER -h db -d   $$POSTGRES_DB > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql; sleep 3600; done"  # Backup every hour


volumes:
  postgres_data:
  backups: