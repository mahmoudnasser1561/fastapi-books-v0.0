services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: books
    ports:
      - "5433:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s  

  api:
    build: .
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db  
      POSTGRES_PORT: 5432
      POSTGRES_DB: books

  lb:
    image: nginx:latest
    ports:
      - "8080:80"  
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api

  backup:
    image: postgres:16  
    volumes:
      - ./backups:/backups 
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db  
      POSTGRES_PORT: 5432
      POSTGRES_DB: books
    command: >
      sh -c "while true; do 
        pg_dump -U $${POSTGRES_USER} -h $${POSTGRES_HOST} -d $${POSTGRES_DB} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql; 
        sleep 3600; 
      done"

  loadtest:
    image: jordi/ab
    depends_on:
      - lb
    volumes:
      - ./ab_results:/results
    entrypoint: >
      /bin/sh -c "
        sleep 10 && \
        ab -n 200 -c 20 http://lb/ > /results/benchmark_$(date +%Y%m%d_%H%M%S).txt
      "

  metrics:
    image: python:3.12
    working_dir: /app
    volumes:
      - ./ab_results:/app/ab_results
    command: >
      sh -c "while true; do python ab_results/parser.py; sleep 15; done"  # Run every 15s to parse new files
    depends_on:
      - loadtest

  ab_exporter:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.12
        RUN pip install prometheus_client
        WORKDIR /app
        COPY monitoring/metrics_exporter.py /app/metrics_exporter.py
        CMD ["python", "metrics_exporter.py"]
    volumes:
      - ./ab_results:/app/ab_results       
    ports:
      - "9100:9100"
    depends_on:
      - metrics

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - ab_exporter
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always

volumes:
  postgres_data:
  backups: